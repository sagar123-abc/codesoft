import java.util.*;

class Question {
    private String questionText;
    private String[] options;
    public int correctOption; // Index of the correct option

    public Question(String questionText, String[] options, int correctOption) {
        this.questionText = questionText;
        this.options = options;
        this.correctOption = correctOption;
    }

    public void displayQuestion() {
        System.out.println(questionText);
        for (int i = 0; i < options.length; i++) {
            System.out.println((i + 1) + ". " + options[i]);
        }
    }

    public boolean checkAnswer(int userAnswer) {
        return userAnswer == correctOption;
    }
}

class Quiz {
    private static Scanner sc = new Scanner(System.in);
    private volatile boolean timeUp;
    private List<Question> questions;

    public Quiz() {
        questions = new ArrayList<>();
        loadQuestions();
    }

    private void loadQuestions() {
        questions.add(new Question("What is the capital of France?",
                new String[]{"Berlin", "Madrid", "Paris", "Rome"}, 3));

        questions.add(new Question("Which language is used for Android development?",
                new String[]{"Python", "Java", "C#", "Ruby"}, 2));

        questions.add(new Question("What is 5 + 7?",
                new String[]{"10", "11", "12", "13"}, 3));
    }

    public void startQuiz() {
        for (Question q : questions) {
            timeUp = false;
            q.displayQuestion();
            System.out.print("You have 10 seconds to answer (1-4): ");

            // Timer thread
            Thread timer = new Thread(() -> {
                try {
                    Thread.sleep(10000); // Wait for 10 seconds
                    timeUp = true;
                    System.out.println("\nTime's up! Moving to the next question.");
                } catch (InterruptedException e) {
                    // Timer interrupted when user answers early
                }
            });

            timer.start();

            // User input thread
            Thread inputThread = new Thread(() -> {
                try {
                    if (sc.hasNextInt()) {
                        int userAnswer = sc.nextInt();
                        timer.interrupt(); // Stop the timer if user answers in time

                        if (!timeUp) {
                            if (q.checkAnswer(userAnswer)) {
                                System.out.println("Correct!\n");
                            } else {
                                System.out.println("Wrong! The correct answer was option " + q.correctOption + ".\n");
                            }
                        }
                    }
                } catch (Exception e) {
                    System.out.println("Error reading input.");
                }
            });

            inputThread.start();

            // Wait for either timer to complete or user to answer
            try {
                timer.join();
                inputThread.interrupt(); // Stop input thread if time is up
            } catch (InterruptedException e) {
                System.out.println("Interrupted while waiting.");
            }

            System.out.println();
        }

        System.out.println("Quiz Over! Thank you for playing.");
    }
}

public class Main {
    public static void main(String[] args) {
        Quiz x = new Quiz();
        x.startQuiz();
    }
}
